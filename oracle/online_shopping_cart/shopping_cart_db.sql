-------- USERSS table -------------

CREATE TABLE userss(id INTEGER GENERATED BY DEFAULT AS IDENTITY, fname VARCHAR(30) DEFAULT NULL, lname VARCHAR(30) NOT NULL, midname VARCHAR(30) NOT NULL, mobile VARCHAR(15) DEFAULT NULL, email VARCHAR(50) NOT NULL, pass_hash VARCHAR(32) NOT NULL, admin NUMERIC(1) DEFAULT 0, vendor NUMERIC(1) DEFAULT 0, registeredAt DATE NOT NULL, lastlogin DATE DEFAULT NULL, intro VARCHAR(1500) DEFAULT NULL, profil CLOB, PRIMARY KEY(id));
CREATE UNIQUE INDEX userss_mobile ON userss(mobile);
CREATE UNIQUE INDEX userss_email ON userss(email);


---------- PRODUCT table ------------

CREATE TABLE product(id INTEGER GENERATED BY DEFAULT AS IDENTITY, user_id INTEGER NOT NULL, title VARCHAR(75) NOT NULL, metaTitle VARCHAR(100) DEFAULT NULL, slug VARCHAR(100) DEFAULT NULL, summary NUMBER(6) DEFAULT 0, typee NUMBER(6) DEFAULT 0, sku VARCHAR(100), price NUMBER(9,2) NOT NULL, discount NUMBER(2) DEFAULT 0, quantity NUMBER(6) DEFAULT 0, shop NUMBER(1), createdAt DATE NOT NULL, updatedAt DATE DEFAULT NULL, publishedAt DATE DEFAULT NULL, startsAt DATE DEFAULT NULL, endsAt DATE DEFAULT NULL, content CLOB, PRIMARY KEY(id));
ALTER TABLE product ADD CONSTRAINT product_userId_fk FOREIGN KEY(user_id) REFERENCES userss(id);
CREATE UNIQUE INDEX product_uniq_slug ON product(slug);
CREATE INDEX idx_userId ON product(user_id);

-------- ORDERS table --------------

CREATE TABLE orders (id INTEGER GENERATED BY DEFAULT AS IDENTITY, user_id INTEGER NOT NULL, sessionid VARCHAR(100) NOT NULL, token VARCHAR(100) NOT NULL, status NUMBER(6,0), subtotal FLOAT DEFAULT 0, itemdiscount FLOAT DEFAULT NULL, tax FLOAT, shipping FLOAT, total FLOAT, promo VARCHAR(50), discount FLOAT, grandtotal FLOAT, fname VARCHAR(30) DEFAULT NULL, lname VARCHAR(30) DEFAULT NULL, midname VARCHAR(30) DEFAULT NULL, mobile VARCHAR(15) DEFAULT NULL, email VARCHAR(50) DEFAULT NULL, line1 VARCHAR(50), line2 VARCHAR(50), city VARCHAR(50) DEFAULT NULL, province VARCHAR(50) DEFAULT NULL, country VARCHAR(50) DEFAULT NULL, createdAt DATE NOT NULL, updatedAt DATE DEFAULT NULL, PRIMARY KEY(id));
ALTER TABLE orders ADD CONSTRAINT order_userid_fk FOREIGN KEY(user_id) REFERENCES userss(id) ON DELETE CASCADE;

--------- ORDER_ITEM table ------------

CREATE TABLE order_item (id INTEGER GENERATED BY DEFAULT AS IDENTITY, product_id INTEGER NOT NULL, order_id INTEGER NOT NULL, sku VARCHAR(100), price FLOAT DEFAULT 0, discount FLOAT DEFAULT 0, quantity NUMBER(6,0) DEFAULT NULL, createdAt DATE NOT NULL, updatedAt DATE DEFAULT NULL, conten CLOB, PRIMARY KEY(id));
ALTER TABLE order_item ADD CONSTRAINT orderitem_productid_fk FOREIGN KEY(product_id) REFERENCES product(id);
ALTER TABLE order_item ADD CONSTRAINT orderitem_orderid_fk FOREIGN KEY(order_id) REFERENCES orders(id);
CREATE INDEX idx_orderitem_productid ON order_item(product_id);
CREATE INDEX idx_orderitem_orderid ON order_item(order_id);

--------- CART table---------------

CREATE TABLE cart(id INTEGER GENERATED BY DEFAULT AS IDENTITY, userId INTEGER NOT NULL, sessionId VARCHAR(100), token VARCHAR(100), status NUMBER(6,0), fname VARCHAR(30) NOT NULL, lname VARCHAR(30) NOT NULL, midname VARCHAR(30) DEFAULT NULL, mobile VARCHAR(15) DEFAULT NULL, email VARCHAR(50) DEFAULT NULL, line1 VARCHAR(50) NOT NULL, line2 VARCHAR(50) DEFAULT NULL, city VARCHAR(50) DEFAULT NULL, province VARCHAR(50) DEFAULT NULL, country VARCHAR(50) DEFAULT NULL, createdAt DATE NOT NULL, updatedAt DATE DEFAULT NULL, conten CLOB, PRIMARY KEY(id));

ALTER TABLE cart ADD CONSTRAINT cart_userid_fk FOREIGN KEY(userId) REFERENCES userss(id) ON DELETE CASCADE;

CREATE INDEX idx_cart_usersid ON cart(userId);

------------CART_ITEM table----------------

CREATE TABLE cart_item(id INTEGER GENERATED BY DEFAULT AS IDENTITY, productId INTEGER NOT NULL, cartId INTEGER NOT NULL, sku VARCHAR(100), price FLOAT NOT NULL, discount FLOAT DEFAULT NULL, quantity NUMBER(6,0) DEFAULT NULL, active NUMBER(1), createdAt DATE NOT NULL, updatedAt DATE DEFAULT NULL, conten CLOB, PRIMARY KEY(id));

ALTER TABLE cart_item ADD CONSTRAINT cartitem_productid_fk FOREIGN KEY(productId) REFERENCES product(id) ON DELETE CASCADE;

ALTER TABLE cart_item ADD CONSTRAINT cartitem_cartid_fk FOREIGN KEY(cartId) REFERENCES cart(id) ON DELETE CASCADE;

CREATE INDEX idx_cartitem_cartid ON cart_item(cartId);

----------TRANSACTION table--------------

CREATE TABLE transactions(id INTEGER GENERATED BY DEFAULT AS IDENTITY, user_id INTEGER NOT NULL, order_id INTEGER NOT NULL, code VARCHAR(100) NOT NULL, typee NUMBER(6,0) DEFAULT 0, modee NUMBER(6,0) DEFAULT 0, status NUMBER(6,0) DEFAULT 0, createdAt DATE NOT NULL, updatedAt DATE DEFAULT NULL, conten CLOB DEFAULT NULL, PRIMARY KEY(id));

ALTER TABLE transactions ADD CONSTRAINT ta_userid_fk FOREIGN KEY(user_id) REFERENCES userss(id) ON DELETE CASCADE;

ALTER TABLE transactions ADD CONSTRAINT ta_orderid_fk FOREIGN KEY(order_id) REFERENCES orders(id) ON DELETE CASCADE;

CREATE INDEX idx_ta_userid ON transactions(user_id);

CREATE INDEX idx_ta_orderid ON transactions(order_id);

---------- PRODUCT_REVIEW table----------

CREATE TABLE product_review(id INTEGER GENERATED BY DEFAULT AS IDENTITY, product_id INTEGER NOT NULL, parent_id INTEGER NOT NULL, title VARCHAR(100) NOT NULL, rating NUMBER(6,0) DEFAULT 0, published NUMBER(1,0) DEFAULT 0, createdAt DATE NOT NULL, publishedAt DATE DEFAULT NULL, conten CLOB NOT NULL, PRIMARY KEY(id));

ALTER TABLE product_review ADD CONSTRAINT proreview__productid_fk FOREIGN KEY(product_id) REFERENCES product(id) ON DELETE CASCADE;

ALTER TABLE product_review ADD CONSTRAINT proview_parentid_fk FOREIGN KEY(parent_id) REFERENCES product_review(id) ON DELETE CASCADE;

CREATE INDEX idx_proreview_productid ON product_review(product_id);

CREATE INDEX idx_proview_parentid ON product_review(parent_id);

------------TAG table---------------------

CREATE TABLE tag (id INTEGER GENERATED BY DEFAULT AS IDENTITY, title VARCHAR(75) NOT NULL, megaTitle VARCHAR(100) DEFAULT NULL, slug VARCHAR(100) NOT NULL, conten CLOB, PRIMARY KEY(id));


------------PRODUCT_TAG table---------------

CREATE TABLE product_tag (product_id INTEGER NOT NULL, tag_id INTEGER NOT NULL, PRIMARY KEY(product_id, tag_id));

ALTER TABLE product_tag ADD CONSTRAINT producttag_productid_fk FOREIGN KEY(product_id) REFERENCES product(id) ON DELETE CASCADE;

ALTER TABLE product_tag ADD CONSTRAINT producttag_tagid_fk FOREIGN KEY(tag_id) REFERENCES tag(id) ON DELETE CASCADE;

CREATE INDEX idx_producttag_productid ON product_tag(product_id);

CREATE INDEX idx_producttag_tagid ON product_tag(tag_id);

-----------PORDUCT_META table-----------

CREATE TABLE product_meta(id INTEGER GENERATED BY DEFAULT AS IDENTITY, product_id INTEGER NOT NULL, key VARCHAR(50), PRIMARY KEY(id), CONSTRAINT prometa_proid_fk FOREIGN KEY(product_id) REFERENCES product(id));

CREATE INDEX idx_productmeta_id ON product_meta(product_id);

CREATE UNIQUE INDEX uniqidx_proid_key ON product_meta(product_id, key);

-----------CATEGORIES table-----------------

CREATE TABLE categories(id INTEGER GENERATED BY DEFAULT AS IDENTITY, parent_id INTEGER NOT NULL, title VARCHAR(100) NOT NULL, metaTitle VARCHAR(100) DEFAULT NULL, slug VARCHAR(100) NOT NULL, conten CLOB DEFAULT NULL, PRIMARY KEY(id));

ALTER TABLE categories ADD CONSTRAINT category_parentid_fk FOREIGN KEY(parent_id) REFERENCES categories(id);

CREATE INDEX categories_parentid ON categories(parent_id);

----------PRODUCT_CATEGORY----------------

CREATE TABLE product_category(product_id INTEGER NOT NULL, category_id INTEGER NOT NULL, PRIMARY KEY(product_id, category_id));

ALTER TABLE product_category ADD CONSTRAINT procat_productid_fk FOREIGN KEY(product_id) REFERENCES product(id);

ALTER TABLE product_category ADD CONSTRAINT procat_categoryid_fk FOREIGN KEY(category_id) REFERENCES categories(id);

CREATE INDEX idx_procat_proid ON product_category(product_id);

CREATE INDEX idx_procat_catid ON product_category(category_id);


=======================================================================================================================