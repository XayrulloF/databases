----create users table----

CREATE TABLE users(id INTEGER GENERATED BY DEFAULT AS IDENTITY, fname VARCHAR(50) DEFAULT NULL, midname VARCHAR(50) DEFAULT NULL, lname VARCHAR(50) DEFAULT NULL, mobile VARCHAR(15) DEFAULT NULL, email VARCHAR(50) DEFAULT NULL, passwordhash VARCHAR(32) NOT NULL, registeredat DATE NOT NULL, lastlogin DATE DEFAULT NULL, intro VARCHAR(500) DEFAULT NULL, profile VARCHAR(3000) DEFAULT NULL, PRIMARY KEY(id));

CREATE UNIQUE INDEX uniq_mobile ON users(mobile);

CREATE UNIQUE INDEX uniq_email ON users(email);

---create post table ----

CREATE TABLE post(id INTEGER GENERATED BY DEFAULT AS IDENTITY, authorid INTEGER NOT NULL, parentid INTEGER DEFAULT NULL, title VARCHAR(45) NOT NULL, megatitle VARCHAR(100) DEFAULT NULL, slug VARCHAR(100) NOT NULL, summary VARCHAR(1000) NULL, published NUMBER(1,0) DEFAULT 0, createdat DATE NOT NULL, updatedat DATE DEFAULT NULL, publishedat DATE DEFAULT NULL, content CLOB, PRIMARY KEY(id));

CREATE UNIQUE INDEX uniq_slug ON post(slug);

CREATE INDEX post_user ON post(authorid);

CREATE INDEX post_parent ON post(parentid);

ALTER TABLE post ADD CONSTRAINT post_user_fk FOREIGN KEY(authorid) REFERENCES users(id) ON DELETE SET NULL;

ALTER TABLE post ADD CONSTRAINT post_parent_fk FOREIGN KEY(parentid) REFERENCES post(id) ON DELETE SET NULL;

---- create postmeta ----

CREATE TABLE postmeta(id INTEGER GENERATED BY DEFAULT AS IDENTITY, postid INTEGER NOT NULL, key VARCHAR(50) NOT NULL, content CLOB DEFAULT NULL, PRIMARY KEY(id));

CREATE INDEX idx_postmeta ON postmeta(postid);

CREATE UNIQUE INDEX uniq_postmeta ON postmeta(postid, key);

ALTER TABLE postmeta ADD CONSTRAINT metapost_fk FOREIGN KEY(postid) REFERENCES post(id) ON DELETE SET NULL;

--- create postcomment table ----

CREATE TABLE postcomment(id INTEGER GENERATED BY DEFAULT AS IDENTITY, postid INTEGER NOT NULL, parentid INTEGER DEFAULT NULL, title VARCHAR(100) NOT NULL, published NUMBER(1, 0) DEFAULT 0, createdat DATE NOT NULL, publishedat DATE DEFAULT NULL, content CLOB DEFAULT NULL, PRIMARY KEY(id));

CREATE INDEX idx_postcomment ON postcomment(postid);

ALTER TABLE postcomment ADD CONSTRAINT postcomment_fk FOREIGN KEY(postid) REFERENCES post(id) ON DELETE SET NULL;

CREATE INDEX idx_comment_parent ON postcomment(parentid);

ALTER TABLE postcomment ADD CONSTRAINT parentcomment_fk FOREIGN KEY(parentid) REFERENCES postcomment(id) ON DELETE SET NULL;

--- category ---

CREATE TABLE category(id INTEGER GENERATED BY DEFAULT AS IDENTITY, parentid INTEGER DEFAULT NULL, title VARCHAR(75) NOT NULL, metatitle VARCHAR(100) DEFAULT NULL, slug VARCHAR(100) NOT NULL, content CLOB DEFAULT NULL, PRIMARY KEY(id));

CREATE INDEX idx_category ON category(parentid);

ALTER TABLE category ADD CONSTRAINT category_fk FOREIGN KEY(parentid) REFERENCES category(id) ON DELETE SET NULL;

--- create table postcategory---

CREATE TABLE postcategory(postid INTEGER NOT NULL, categoryid INTEGER NOT NULL, PRIMARY KEY(postid, categoryid));

CREATE INDEX idx_postid_pcat ON postcategory(postid);

CREATE INDEX idx_categoryid_pcat ON postcategory(categoryid);

ALTER TABLE postcategory ADD CONSTRAINT pcat_post FOREIGN KEY(postid) REFERENCES post(id);

ALTER TABLE postcategory ADD CONSTRAINT pcat_category FOREIGN KEY(categoryid) REFERENCES category(id);

--- CREATE tag TABLE ---

CREATE TABLE tag(id INTEGER GENERATED BY DEFAULT AS IDENTITY, title VARCHAR(75) NOT NULL, metatitle VARCHAR(100) DEFAULT NULL, slug VARCHAR(100) NOT NULL, content CLOB DEFAULT NULL, PRIMARY KEY(id));

--- CREATE posttag TABLE ---

CREATE TABLE tagtable(tagid INTEGER NOT NULL, postid INTEGER NOT NULL, PRIMARY KEY(tagid, postid));

CREATE INDEX idx_tagtable_tagid ON tagtable(tagid);

CREATE INDEX idx_tagtable_postid ON tagtable(postid);

ALTER TABLE tagtable ADD CONSTRAINT tagtable_tagid_fk FOREIGN KEY(tagid) REFERENCES tag(id) ON DELETE SET NULL;

ALTER TABLE tagtable ADD CONSTRAINT tagtable_postid_fk FOREIGN KEY(postid) REFERENCES post(id) ON DELETE SET NULL;